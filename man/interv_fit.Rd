% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mlintervals.R
\name{interv_fit}
\alias{interv_fit}
\title{Interpolating the process, given an interval averaged series}
\usage{
interv_fit(M, t_0 = 0, t_unit = 1, t_end = NULL)
}
\arguments{
\item{M}{series of observed integrals}

\item{t_0}{time at beginning of the first interval}

\item{t_unit}{time span of each interval}

\item{t_end}{time at the end of the last interval. If \code{t_end} is specified,
\code{t_unit} is ignored}
}
\value{
A list of class \code{interv_fit}, with the following attributes:
\itemize{
  \item \code{$data}: series M
  \item \code{$knots}: estimated value for the Wiener process in the points between
  intervals
  \item \code{$sigma2}: estiamated scale parameter
  \item \code{$se}: standard errors for the knots values. They depend on sigma2 and on
  homoskedasticity assumption
  \item \code{$covariances}: covariances of consecutive knots estimates.
}
}
\description{
Maximum Likelihood interpolation of a Wiener process, given a series of observed integrals
over adiacent time intervals of equal lenght. To get point estimates of the interpolating
function, use method \code{\link[=predict.interv_fit]{predict}}. The method assumes a
process with
homegeneous variance, but the estimated interpolating line is quite robust to
heteroskedasticity, anyway, also scale parameter \code{sigma2} is estimated as well as
SEs based on it.
}
\details{
\code{predict}
}
\examples{
M= c(0, 1, -1, 2, 4)
mod= interv_fit(M)
plot(mod)

mod= interv_fit(M, t_0= 5, t_unit= 2)
plot(mod)
}
